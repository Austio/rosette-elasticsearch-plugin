node {
    env.JAVA_HOME="${tool 'java8'}"
    env.PATH="${env.JAVA_HOME}/bin:${env.PATH}"
    try {
        stage("Clean up") {
            step([$class: 'WsCleanup'])
        }
        stage("Checkout Code") {
            checkout scm
        }
        stage("Build") {
            env.OUR_ELASTIC_VERSION = sh (
                script: "grep -oP \"<elasticsearch.version>\\K.+(?=</elasticsearch.version>)\" pom.xml",
                returnStdout: true
            ).trim()
            env.LATEST_ELASTIC_VERSION = sh (
                script: "curl -sL http://search.maven.org/solrsearch/select?q=g:%22org.elasticsearch%22+AND+a:%22elasticsearch%22 | jq -r .response.docs[0].latestVersion",
                returnStdout: true
            ).trim()
            if (env.OUR_ELASTIC_VERSION == env.LATEST_ELASTIC_VERSION) {
                echo "No change in ElasticSearch version, skipping build."
            } else if (env.LATEST_ELASTIC_VERSION ==~ /^(\d+\.)?(\d+\.)?(\d+)$/) {
                withMaven(maven: "Basis", mavenLocalRepo: "$JENKINS_HOME/.m2/repository") {
                    sh "mvn -Delasticsearch.version=${env.LATEST_ELASTIC_VERSION} clean verify"
                }
                slack(true)
            } else {
                echo "ElasticSearch version ${env.LATEST_ELASTIC_VERSION} is not official semver, skipping build."
            }
        }
    } catch (e) {
        currentBuild.result = "FAILED"
        slack(false)
        throw e
    }
}

def slack(boolean success) {
    def color = success ? "#00FF00" : "#FF0000"
    def status = success ? "SUCCESSFUL" : "FAILED"
    def message = status + ": Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
    slackSend(color: color, channel: "#juggernaut", message: message)
}
